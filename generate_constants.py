#!/usr/bin/env python3

"""
Generate the constants.py file
"""

import sys

import PyKCS11.LowLevel

HEADER = """# pylint: disable=missing-module-docstring, disable=too-many-lines

import PyKCS11.LowLevel

# This file is generated by "make constants"
# To not edit by hand

# redefine PKCS#11 constants
CK_TRUE = PyKCS11.LowLevel.CK_TRUE
CK_FALSE = PyKCS11.LowLevel.CK_FALSE
CK_UNAVAILABLE_INFORMATION = PyKCS11.LowLevel.CK_UNAVAILABLE_INFORMATION
CK_EFFECTIVELY_INFINITE = PyKCS11.LowLevel.CK_EFFECTIVELY_INFINITE
CK_INVALID_HANDLE = PyKCS11.LowLevel.CK_INVALID_HANDLE
"""

if __name__ == "__main__":
    print(HEADER)

    old_head = ""
    # redefine PKCS#11 constants using well known prefixes
    this = sys.modules[__name__]
    for k, v in PyKCS11.LowLevel.__dict__.items():
        if k[:4] in [
            "CKA_",
            "CKC_",
            "CKD_",
            "CKF_",
            "CKG_",
            "CKH_",
            "CKK_",
            "CKM_",
            "CKO_",
            "CKR_",
            "CKS_",
            "CKU_",
            "CKZ_",
        ]:
            head = k[:3]  # 'CKM_RSA_PKCS' => 'CKM'

            if head != old_head:
                print(f"\n# {head} constants")
                print(f"{head} = {{}}")
                old_head = head

            print(f"{k} = PyKCS11.LowLevel.{k}")

            if k[3:] != "_VENDOR_DEFINED":
                # CKM['CKM_RSA_PKCS'] = CKM_RSA_PKCS
                print(f'{head}["{k}"] = {k}')

                # CKM[CKM_RSA_PKCS] = 'CKM_RSA_PKCS'
                print(f'{head}[{k}] = "{k}"')

                print()
